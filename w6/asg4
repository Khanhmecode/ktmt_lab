.data
A: .word 1, 8, 9, 2, 3
Aend: .word
.text
main: 
      la $a0, A				#$a0 = Address(A[0])
      la $a1, Aend			#$a1 = Address(Aend)
      addi $v0, $a0, 0			#init max pointer to first element
      addi $a1, $a1, -4			#$a1 = Address(A[n-1])
      j sort
after_sort: li $v0, 10			#exit
            syscall
end_main:

sort: beq $a0, $a1, after_sort		#branch to after_sort if element list is sorted
      j swap				#call the swap procedure
swap: 
      addi $a0, $a0, 4 			#i=i+1
      lw $s0, 0($a0)			#$s0 = key = A[0]
      addi $t0, $a0, -4			#j=i-1
after_swap: 
      slt $t1, $t0, $v0			#$t1 = 1 if j < i 
      beq $t1, $zero, inner_loop	#branch to inner_loop if $t1 = 0
      j outer_loop
inner_loop: 
      lw $s1, 0($t0)			#$s1 = A[j]
      slt $t2, $s0, $s1			#St2=1 if A[i] < A[j]
      beq $t2, $zero, outer_loop	#branch to outer_loop if $t2 = 0
      addi $v1, $t0, 4			#$v1 = j+1
      sw $s1, 0($v1)			#$s1 = A[j+1]	
      addi $t0, $t0, -4			#j=j-1
      j after_swap
outer_loop: 
      addi $t0, $t0, 4			#j=j+1
      sw $s0, 0($t0)			#$s0 = key = A[j+1]
      j sort
      
      

